{{ 'component-card.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}
{{ 'section-related-products.css' | asset_url | stylesheet_tag }}

{% if section.settings.image_shape == 'blob' %}
  {{ 'mask-blobs.css' | asset_url | stylesheet_tag }}
{%- endif -%}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<style>

    .slick--related-products .slick-track {
        display: flex !important;
        align-items: stretch !important; /* Ensures all items are the same height */
    }

    .slick--related-products .slick-slide {
        height: auto !important;
        display: flex !important;
        flex-direction: column;
        justify-content: space-between;
        margin-right : 20px;
    }

    
</style>

<div class="color-{{ section.settings.color_scheme }} gradient ">
  <div
    class="product-recommendations related-products page-width_ pt-[56px] pb-[28px] md:py-[82px] pl-[28px] md:px-[60px]"
    data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit={{ section.settings.products_to_show }}"
  >
    {% if recommendations.performed and recommendations.products_count > 0 %}
      <h2 class="font-chubbo-medium text-[30px] md:text-[48px] mb-[24px] md:mb-[48px] {% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}">
        {{ section.settings.heading }}
      </h2>
      <div
        class="slick--related-products custom--grid grid-cols-2_ md:grid-cols-4 gap-[20px] md:gap-[36px]"
        
      >
        {% for recommendation in recommendations.products %}
            {% render 'card-product__mmh', product: recommendation %}
        {% endfor %}
      </div>
    {% endif %}
  </div>
  {% if section.settings.image_shape == 'arch' %}
    {% render 'mask-arch' %}
  {%- endif -%}
</div>


<script>
document.addEventListener("DOMContentLoaded", function () {
    function initSlick() {
        let $slider = $(".slick--related-products");
        console.log($slider)

        if ($slider.length === 0 || $slider.children().length === 0) {
            console.log("Slick slider not found or empty. Skipping initialization.");
            return;
        }

        if ($slider.hasClass("slick-initialized")) {
            console.log("Destroying existing Slick instance...");
            $slider.slick("unslick");
        }

        console.log("Initializing Slick...");
        $slider.slick({
            infinite: false,
            speed: 400,
            slidesToShow: 1.5,
            slidesToScroll: 1,
            dots: false,
            arrows: false,
            mobileFirst: true,
            responsive: [
                {
                    breakpoint: 750,
                    settings: {
                        slidesToShow: 2.5,
                    },
                },
                {
                    breakpoint: 990,
                    settings: "unslick"
                }
            ],
        });
    }

    function loadProductRecommendations() {
        const productRecommendations = document.querySelector(".product-recommendations");
        if (!productRecommendations) return;

        const requestUrl = productRecommendations.dataset.url;
        console.log("Fetching product recommendations from:", requestUrl);

        fetch(requestUrl)
            .then(response => response.text())
            .then(html => {
                let tempContainer = document.createElement("div");
                tempContainer.innerHTML = html;
                let newContent = tempContainer.querySelector(".related-products");

                if (newContent) {
                    console.log("Updating product recommendations...");
                    productRecommendations.innerHTML = newContent.innerHTML;

                    // Wait for DOM update before initializing Slick
                    setTimeout(() => {
                        initSlick();
                    }, 200);
                } else {
                    console.log("No new content found in fetched recommendations.");
                }
            })
            .catch(error => console.error("Error loading recommendations:", error));
    }

    loadProductRecommendations();
});


</script>


{% schema %}
{
  "name": "t:sections.related-products.name",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "paragraph",
      "content": "t:sections.related-products.settings.paragraph__1.content"
    },
    {
      "type": "inline_richtext",
      "id": "heading",
      "default": "You may also like",
      "label": "t:sections.related-products.settings.heading.label"
    },
    {
      "type": "select",
      "id": "heading_size",
      "options": [
        {
          "value": "h2",
          "label": "t:sections.all.heading_size.options__1.label"
        },
        {
          "value": "h1",
          "label": "t:sections.all.heading_size.options__2.label"
        },
        {
          "value": "h0",
          "label": "t:sections.all.heading_size.options__3.label"
        }
      ],
      "default": "h1",
      "label": "t:sections.all.heading_size.label"
    },
    {
      "type": "range",
      "id": "products_to_show",
      "min": 2,
      "max": 10,
      "step": 1,
      "default": 4,
      "label": "t:sections.related-products.settings.products_to_show.label"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 5,
      "step": 1,
      "default": 4,
      "label": "t:sections.related-products.settings.columns_desktop.label"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "info": "t:sections.all.colors.has_cards_info",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.related-products.settings.header__2.content"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.related-products.settings.image_ratio.options__1.label"
        },
        {
          "value": "portrait",
          "label": "t:sections.related-products.settings.image_ratio.options__2.label"
        },
        {
          "value": "square",
          "label": "t:sections.related-products.settings.image_ratio.options__3.label"
        }
      ],
      "default": "adapt",
      "label": "t:sections.related-products.settings.image_ratio.label"
    },
    {
      "type": "select",
      "id": "image_shape",
      "options": [
        {
          "value": "default",
          "label": "t:sections.all.image_shape.options__1.label"
        },
        {
          "value": "arch",
          "label": "t:sections.all.image_shape.options__2.label"
        },
        {
          "value": "blob",
          "label": "t:sections.all.image_shape.options__3.label"
        },
        {
          "value": "chevronleft",
          "label": "t:sections.all.image_shape.options__4.label"
        },
        {
          "value": "chevronright",
          "label": "t:sections.all.image_shape.options__5.label"
        },
        {
          "value": "diamond",
          "label": "t:sections.all.image_shape.options__6.label"
        },
        {
          "value": "parallelogram",
          "label": "t:sections.all.image_shape.options__7.label"
        },
        {
          "value": "round",
          "label": "t:sections.all.image_shape.options__8.label"
        }
      ],
      "default": "default",
      "label": "t:sections.all.image_shape.label",
      "info": "t:sections.all.image_shape.info"
    },
    {
      "type": "checkbox",
      "id": "show_secondary_image",
      "default": false,
      "label": "t:sections.related-products.settings.show_secondary_image.label"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "default": false,
      "label": "t:sections.related-products.settings.show_vendor.label"
    },
    {
      "type": "checkbox",
      "id": "show_rating",
      "default": false,
      "label": "t:sections.related-products.settings.show_rating.label",
      "info": "t:sections.related-products.settings.show_rating.info"
    },
    {
      "type": "header",
      "content": "t:sections.related-products.settings.header_mobile.content"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "default": "2",
      "label": "t:sections.related-products.settings.columns_mobile.label",
      "options": [
        {
          "value": "1",
          "label": "t:sections.related-products.settings.columns_mobile.options__1.label"
        },
        {
          "value": "2",
          "label": "t:sections.related-products.settings.columns_mobile.options__2.label"
        }
      ]
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ]
}
{% endschema %}
